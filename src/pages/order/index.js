import React, { useState, useEffect } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { Table, Col, Container, Row, Button } from "react-bootstrap";
import { Gap, Header, Title } from "@/components";
import { getOrders, deleteOrder } from "@/hooks/useOrder";
import { useQuery, useQueryClient, useMutation } from "@tanstack/react-query";
import Swal from "sweetalert2";
import { Snap } from "midtrans-client";

function Order() {
  const router = useRouter();
  const [user, setUser] = useState("");
  const queryClient = useQueryClient();

  const paymentRequest = {
    transaction_details: {
      order_id: "ORDER123",
      gross_amount: 10000,
    },
    credit_card: {
      secure: true,
    },
  };

  const snap = new Snap({
    isProduction: false,
    serverKey: "SB-Mid-server-CXazCvDS8ICzN6bALgs9tCEg",
    clientKey: "SB-Mid-client-BvFb3TRROqvbGzFf",
  });

  useEffect(() => {
    const token = localStorage.getItem("token");
    const userId = localStorage.getItem("userId");
    if (token) {
      setUser(userId);
    }
  }, []);

  const { data: orders } = useQuery({
    queryKey: ["orders", { user }],
    queryFn: async () => await getOrders(user),
  });

  const { mutate: mutateDelete } = useMutation({
    mutationFn: async (id) => {
      await deleteOrder(id);
    },
    onSuccess: async () => {
      await queryClient.invalidateQueries({ queryKey: ["orders"] });
    },
  });

  const handleDelete = async (id) => {
    mutateDelete(id);
    Swal.fire({
      icon: "success",
      title: "Order Canceled Successfully",
      showConfirmButton: false,
      timer: 2000,
    });
  };

  const handlePayment = async () => {
    snap
      .createTransaction(paymentRequest)
      .then((transactionToken) => {
        snap.pay(transactionToken.token);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  return (
    <>
      <Head>
        <title>My Orders</title>
        <meta
          name="description"
          content="My Order - Generated by create next app"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Header />
        <Gap />
        <Title title="My Orders" />
        <Gap />
        <Row className="justify-content-md-center">
          <Col md={10}>
            <Table bordered striped>
              <thead>
                <tr>
                  <td>No</td>
                  <td>Order Date</td>
                  <td>Recipient Name</td>
                  <td>Status</td>
                  <td>Action</td>
                </tr>
              </thead>
              <tbody>
                {orders?.map((order, index) => (
                  <tr key={order._id}>
                    <td>{index + 1}</td>
                    <td>{order.createdAt}</td>
                    <td>{order.recipient}</td>
                    <td>{order.status}</td>
                    <td>
                      <Button
                        variant="success"
                        size="sm"
                        className="m-1"
                        onClick={() => {
                          handlePayment();
                        }}
                      >
                        Pay Now
                      </Button>
                      <Button
                        variant="danger"
                        size="sm"
                        className="m-1"
                        onClick={() => {
                          handleDelete(order._id);
                        }}
                      >
                        Cancel
                      </Button>
                      <Button
                        variant="primary"
                        size="sm"
                        className="m-1"
                        onClick={() => {
                          router.push(`/order/details/${order._id}`);
                        }}
                      >
                        Details
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
          </Col>
        </Row>
        <Gap />
      </Container>
    </>
  );
}

export default Order;
